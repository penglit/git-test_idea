package com.accp.myoa.web.action;
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.accp.myoa.entity.Email;
import com.accp.myoa.entity.EmailReceivce;
import com.accp.myoa.entity.Scratchpad;
import com.accp.myoa.entity.User;
import com.accp.myoa.service.EmailService;
import com.accp.myoa.service.MenuService;
import com.accp.myoa.service.ScratchpadService;
import com.accp.myoa.service.UserService;

/** 
 * MyEclipse Struts
 * Creation date: 05-08-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ForwardAction extends DispatchAction {
	private UserService userService;
	private EmailService emailService;
	
	
	private MenuService menuService;
	private ScratchpadService scratchpadService;
	
	

	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	public void setEmailService(EmailService emailService) {
		this.emailService = emailService;
	}

	public void setScratchpadService(ScratchpadService scratchpadService) {
		this.scratchpadService = scratchpadService;
	}

	public void setScratchpadBiz(ScratchpadService scratchpadBiz) {
		this.scratchpadService = scratchpadService;
	}

	public void setMenuService(MenuService menuService) {
		this.menuService = menuService;
	}

	
	//登陆时显示左边目录
	public ActionForward toLeft(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session =request.getSession();
		User user=(User)session.getAttribute("user");
		int id=menuService.getMenuId(user);
		if(id!=0){
			request.setAttribute("list",menuService.getMenu(id,user));
		}
		return mapping.findForward("menu");
	}
	
	public ActionForward toMain(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("main");
	}
	/**
	 * 鐩綍
	 */
	public ActionForward toMyOffice(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id=Integer.parseInt(request.getParameter("id"));
		HttpSession session =request.getSession();
		
		request.setAttribute("list",menuService.getMenu(id,(User)session.getAttribute("user")));
		
		return mapping.findForward("menu");
	}
	
	/*
	 * MyOffice
	 */
	
	
	public ActionForward toIndividualInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("individualInfo");
	}
	/**
	 * 鏌ヨ宸插垹闄ょ殑Email
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward toDeleteEmail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int page=1;
		if(request.getParameter("page")!=null){
			page=Integer.parseInt(request.getParameter("page"));
		}
		HttpSession session=request.getSession();
		User user=(User)session.getAttribute("user");
		List<Integer> list=emailService.getDeleteEmailCountAndMaxPage(user.getUserId());
		request.setAttribute("curPage", page);//褰撳墠椤�
		request.setAttribute("count", list.get(0));//鎬绘潯鏁�
		request.setAttribute("maxPage",list.get(1));//鏈�ぇ椤垫暟
		
		
		request.setAttribute("thisweek", emailService.getWeekFirstDay());//杩欎竴鍛ㄦ槦鏈熶竴
		request.setAttribute("lastweek", emailService.getLastWeekFirstDay());//涓婁竴鍛ㄦ槦鏈熶竴
		List<EmailReceivce> listemail=emailService.getDeleteEmailByUser(user.getUserId(), page);//鑾峰緱淇′欢
		request.setAttribute("listemail", listemail);
		
		String today=new SimpleDateFormat("yyyy-MM-dd").format(new Date());
		request.setAttribute("today",today+" 0:00");
		return mapping.findForward("deleteEmail");
		
	}
	
	/**
	 * 鏌ョ湅閭欢
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 */
	public ActionForward toShowEmail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		HttpSession session=request.getSession();
		User user=(User)session.getAttribute("user");
		int id=Integer.parseInt(request.getParameter("id"));
		Email email=emailService.getEmailById(id);//鏌ュ埌涓�欢閭欢
		if(email.getEmailType().getEmailTypeName().equals("鎶勯�")){
			List<String> list=emailService.getSendEmailUserByEmailId(email.getEmailId(),user.getUserId());
			request.setAttribute("userlist", list);
		}
		request.setAttribute("page", request.getParameter("page"));
		request.setAttribute("email", email);
		if(request.getParameter("flag").equals("em")){
			//System.out.print("em");
			request.setAttribute("situ", "em");
		}else{
			request.setAttribute("situ", "de");
		}
		return mapping.findForward("showemail");
	}
	
	public ActionForward toGiveMail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int page=1;
		if(request.getParameter("page")!=null){
			page=Integer.parseInt(request.getParameter("page"));
		}
		HttpSession session=request.getSession();
		User user=(User)session.getAttribute("user");
		List<Integer> list=emailService.getCountAndMaxPage(user.getUserId());
		request.setAttribute("curPage", page);//褰撳墠椤�
		request.setAttribute("count", list.get(0));//鎬绘潯鏁�
		request.setAttribute("maxPage",list.get(1));//鏈�ぇ椤垫暟
		int unread=emailService.getCountUnRead(user.getUserId());
		request.setAttribute("unread", unread);//鏈鍙栫殑閭欢鐨勬�鏁�
		request.setAttribute("thisweek", emailService.getWeekFirstDay());//杩欎竴鍛ㄦ槦鏈熶竴
		request.setAttribute("lastweek", emailService.getLastWeekFirstDay());//涓婁竴鍛ㄦ槦鏈熶竴
		List<EmailReceivce> listemail=emailService.getEmailByUser(user.getUserId(), page);//鑾峰緱淇′欢
		request.setAttribute("listemail", listemail);
		
		String today=new SimpleDateFormat("yyyy-MM-dd").format(new Date());
		request.setAttribute("today",today+" 0:00");
		return mapping.findForward("email");
	}
	
	public ActionForward toWriteMail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("wmail");
	}
	
	public ActionForward toMessage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("message");
	}
	public ActionForward toComfirm(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("comfirm");
	}
	public ActionForward toPresist(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("presist");
	}
	
	//涓汉渚跨(鏃ョ▼鎸夋帓)
	public ActionForward toAlertInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Calendar c=Calendar.getInstance();
		request.setAttribute("year", c.get(Calendar.YEAR));
		request.setAttribute("month",String.valueOf(c.get(Calendar.MONTH)+1));//浼犵湡瀹炵殑鏈堜唤
		request.setAttribute("day", c.get(Calendar.DAY_OF_MONTH));
		//杩欎釜鏈堢殑鎬诲ぉ鏁�
		int daycount=scratchpadService.getCountDaysOfThisMonth(String.valueOf(c.get(Calendar.YEAR)), String.valueOf(c.get(Calendar.MONTH)+1));
		request.setAttribute("daycount", daycount);
		
		//杩欎釜鏈�鍙锋槸鏄熸湡鍑�1涓烘槦鏈熸棩锛�涓烘槦鏈熶竴
		int firstDayWeek=scratchpadService.getThisMonthFirstDayWeek(String.valueOf(c.get(Calendar.YEAR)),String.valueOf(c.get(Calendar.MONTH)+1));
		request.setAttribute("firstDayWeek", firstDayWeek);
		
		HttpSession session=request.getSession();
		
		//閫氳繃骞存湀锛岃幏寰楄繖涓湀鐨勪究绛�
		List<Scratchpad> scratchpad=scratchpadService.
				getScratchpadByDate(String.valueOf(c.get(Calendar.YEAR)), String.valueOf(c.get(Calendar.MONTH)+1), (User)session.getAttribute("user"));
		request.setAttribute("list", scratchpad);
		return mapping.findForward("alertInfo");
	}
	public ActionForward toDiary(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("diary");
	}
	public ActionForward toWeekDiary(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("weekDiary");
	}
	public ActionForward toConnection(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("connection");
	}
	public ActionForward toFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		return mapping.findForward("file");
	}
	
}